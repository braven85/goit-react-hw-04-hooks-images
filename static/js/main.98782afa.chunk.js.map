{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.jsx","reportWebVitals.js","index.js","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css"],"names":["module","exports","Searchbar","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","ImageGalleryItem","ImageGalleryItemImage","_ref","changeHandler","submitHandler","react_default","a","createElement","className","styles","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","props","id","webformatURL","largeImageURL","tags","src","alt","data-img","ImageGallery","images","openModalWindow","onClick","map","ImageGalleryItem_ImageGalleryItem","key","Button","loadMore","Modal","largeImg","largeImgAlt","closeModal","Overlay","App","_useState","useState","_useState2","Object","slicedToArray","page","setPage","_useState3","_useState4","setImages","_useState5","_useState6","isLoaded","setIsLoaded","_useState7","_useState8","searchInput","setSearchInput","_useState9","_useState10","setLargeImg","_useState11","_useState12","setLargeImgAlt","_useState13","_useState14","isModalOpen","setIsModalOpen","_useState15","_useState16","totalImages","setTotalImages","_useState17","_useState18","imagesDisplayed","setImagesDisplayed","fetchImages","searchValue","pageNum","fetch","concat","then","data","json","total","hits","toConsumableArray","length","finally","error","console","useEffect","window","addEventListener","e","code","components_Searchbar_Searchbar","value","target","preventDefault","ImageGallery_ImageGallery","nodeName","dataset","img","esm","color","secondaryColor","height","width","Fragment","Button_Button","Modal_Modal","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"yJACAA,EAAAC,QAAA,CAAkBC,UAAA,6BAAAC,WAAA,8BAAAC,iBAAA,oCAAAC,sBAAA,yCAAAC,gBAAA,uDCAlBN,EAAAC,QAAA,CAAkBM,iBAAA,2CAAAC,sBAAA,2KCwBHN,EArBG,SAAAO,GAAsC,IAAnCC,EAAmCD,EAAnCC,cAAeC,EAAoBF,EAApBE,cAClC,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOd,WACxBU,EAAAC,EAAAC,cAAA,QAAMG,SAAUN,EAAeI,UAAWC,IAAOb,YAC/CS,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASH,UAAWC,IAAOZ,kBACtCQ,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOX,uBAAxB,WAGFO,EAAAC,EAAAC,cAAA,SACEC,UAAWC,IAAOV,gBAClBY,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUZ,uCCDLH,MAdf,SAA0BgB,GAAO,IACvBC,EAA0CD,EAA1CC,GAAIC,EAAsCF,EAAtCE,aAAcC,EAAwBH,EAAxBG,cAAeC,EAASJ,EAATI,KACzC,OACEf,EAAAC,EAAAC,cAAA,MAAIU,GAAIA,EAAIT,UAAWC,IAAOT,kBAC5BK,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOR,sBAClBoB,IAAKH,EACLI,IAAKF,EACLG,WAAUJ,MCUHK,MAjBf,SAAsBR,GAAO,IACjBS,EAA4BT,EAA5BS,OAAQC,EAAoBV,EAApBU,gBAChB,OACErB,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOe,aAAcG,QAASD,GAC1CD,EAAOG,IAAI,SAAA1B,GAAA,IAAGe,EAAHf,EAAGe,GAAIC,EAAPhB,EAAOgB,aAAcC,EAArBjB,EAAqBiB,cAAeC,EAApClB,EAAoCkB,KAApC,OACVf,EAAAC,EAAAC,cAACsB,EAAD,CACEC,IAAKb,EACLA,GAAIA,EACJC,aAAcA,EACdC,cAAeA,EACfC,KAAMA,wBCFHW,MARf,SAAA7B,GAA8B,IAAZ8B,EAAY9B,EAAZ8B,SAChB,OACE3B,EAAAC,EAAAC,cAAA,UAAQoB,QAASK,EAAUxB,UAAWC,IAAOsB,QAA7C,8CCSWE,MAZf,SAAejB,GAAO,IACVkB,EAAsClB,EAAtCkB,SAAUC,EAA4BnB,EAA5BmB,YAAaC,EAAepB,EAAfoB,WAE/B,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO4B,QAASV,QAASS,GACvC/B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOwB,OACrB5B,EAAAC,EAAAC,cAAA,OAAKc,IAAKa,EAAUZ,IAAKa,OCsGpBG,MArGf,WAAe,IAAAC,EACWC,mBAAS,GADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACAI,EADAJ,EAAA,GAAAK,EAEeN,mBAAS,IAFxBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENrB,EAFMsB,EAAA,GAEEC,EAFFD,EAAA,GAAAE,EAGmBT,oBAAS,GAH5BU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGNE,EAHMD,EAAA,GAGIE,EAHJF,EAAA,GAAAG,EAIyBb,mBAAS,IAJlCc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAINE,EAJMD,EAAA,GAIOE,EAJPF,EAAA,GAAAG,EAKmBjB,mBAAS,IAL5BkB,EAAAhB,OAAAC,EAAA,EAAAD,CAAAe,EAAA,GAKNvB,EALMwB,EAAA,GAKIC,EALJD,EAAA,GAAAE,EAMyBpB,mBAAS,IANlCqB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAMNzB,EANM0B,EAAA,GAMOC,EANPD,EAAA,GAAAE,EAOyBvB,oBAAS,GAPlCwB,EAAAtB,OAAAC,EAAA,EAAAD,CAAAqB,EAAA,GAONE,EAPMD,EAAA,GAOOE,EAPPF,EAAA,GAAAG,EAQyB3B,mBAAS,GARlC4B,EAAA1B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAQNE,EARMD,EAAA,GAQOE,EARPF,EAAA,GAAAG,EASiC/B,mBAAS,GAT1CgC,EAAA9B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GASNE,EATMD,EAAA,GASWE,EATXF,EAAA,GAWPG,EAAc,SAACC,EAAaC,GAChC,IACEC,MAAK,sEAAAC,OACmEH,EADnE,UAAAG,OACuFF,EADvF,yDAGFG,KAAK,SAACC,GAAD,OAAUA,EAAKC,SACpBF,KAAK,SAACC,GACLX,EAAeW,EAAKE,OAEhBnC,EADK,IAATJ,EACcqC,EAAKG,KACN,GAAAL,OAAArC,OAAA2C,EAAA,EAAA3C,CAAKjB,GAALiB,OAAA2C,EAAA,EAAA3C,CAAgBuC,EAAKG,QAE9BV,EADK,IAAT9B,EACuBqC,EAAKG,KAAKE,OACVb,EAAkBQ,EAAKG,KAAKE,UAEpDC,QAAQ,kBAAMnC,GAAY,KAC7B,MAAOoC,GACPC,QAAQD,MAAMA,KAgDlB,OA5CAE,oBAAU,WACRf,EAAYpB,EAAaX,IACxB,CAACW,EAAaX,IAwCjB+C,OAAOC,iBAAiB,UAbE,SAACC,GACV,WAAXA,EAAEC,MACJ5B,GAAe,KAcjB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwF,EAAD,CAAW5F,cA1CO,SAAC0F,GACrB,IAAMG,EAAQH,EAAEI,OAAOD,MACvBxC,EAAewC,IAwC4B5F,cArCvB,SAACyF,GACrBA,EAAEK,iBACFrD,EAAQ,GACR8B,EAAYpB,EAAaX,OAoCT,IAAbO,EACC9C,EAAAC,EAAAC,cAAC4F,EAAD,CAAc1E,OAAQA,EAAQC,gBA7BZ,SAACmE,GACG,QAAtBA,EAAEI,OAAOG,WAGbzC,EAAYkC,EAAEI,OAAOI,QAAQC,KAC7BxC,EAAe+B,EAAEI,OAAO3E,KACxB4C,GAAe,OAyBX7D,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMC,MAAM,OAAOC,eAAe,QAAQC,OAAO,MAAMC,MAAM,QAG9DlC,IAAoBJ,EAAchE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsG,SAAA,MAAQvG,EAAAC,EAAAC,cAACsG,EAAD,CAAQ7E,SAvCtC,SAAC6D,GAChBA,EAAEK,iBACFrD,EAAQ,SAAAD,GAAI,OAAIA,EAAO,QAuCJ,IAAhBqB,EACC5D,EAAAC,EAAAC,cAACuG,EAAD,CACE1E,WAvBW,SAACyD,GACQ,QAAtBA,EAAEI,OAAOG,UAGblC,GAAe,IAoBThC,SAAUA,EACVC,YAAaA,IAGf9B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsG,SAAA,QC7FOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAArB,EAAA,GAAAb,KAAAkC,EAAAC,KAAA,UAAqBnC,KAAK,SAAA9E,GAAiD,IAA9CkH,EAA8ClH,EAA9CkH,OAAQC,EAAsCnH,EAAtCmH,OAAQC,EAA8BpH,EAA9BoH,OAAQC,EAAsBrH,EAAtBqH,OAAQC,EAActH,EAAdsH,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACPrH,EAAAC,EAAAC,cAACF,EAAAC,EAAMqH,WAAP,KACEtH,EAAAC,EAAAC,cAACqH,EAAD,OAEFC,SAASC,eAAe,SAM1Bf,uBCfAtH,EAAAC,QAAA,CAAkB2C,QAAA,uBAAAJ,MAAA,yCCAlBxC,EAAAC,QAAA,CAAkB8B,aAAA,uDCAlB/B,EAAAC,QAAA,CAAkBqC,OAAA","file":"static/js/main.98782afa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2-NJb\",\"SearchForm\":\"Searchbar_SearchForm__I4_M1\",\"SearchFormButton\":\"Searchbar_SearchFormButton__32-hn\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__11zhp\",\"SearchFormInput\":\"Searchbar_SearchFormInput__20DLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3GIpS\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__IlEhG\"};","import React from \"react\";\r\nimport styles from \"./Searchbar.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Searchbar = ({ changeHandler, submitHandler }) => {\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form onSubmit={submitHandler} className={styles.SearchForm}>\r\n        <button type=\"submit\" className={styles.SearchFormButton}>\r\n          <span className={styles.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={styles.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={changeHandler}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  changeHandler: PropTypes.func,\r\n  submitHandler: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./ImageGalleryItem.module.css\";\r\n\r\nfunction ImageGalleryItem(props) {\r\n  const { id, webformatURL, largeImageURL, tags } = props;\r\n  return (\r\n    <li id={id} className={styles.ImageGalleryItem}>\r\n      <img\r\n        className={styles.ImageGalleryItemImage}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-img={largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport styles from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nfunction ImageGallery(props) {\r\n    const { images, openModalWindow } = props;\r\n    return (\r\n      <ul className={styles.ImageGallery} onClick={openModalWindow}>\r\n        {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            id={id}\r\n            webformatURL={webformatURL}\r\n            largeImageURL={largeImageURL}\r\n            tags={tags}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\n\r\nexport default ImageGallery;\r\n","import styles from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nfunction Button({ loadMore }) {\r\n  return (\r\n    <button onClick={loadMore} className={styles.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Modal.module.css\";\r\n\r\nfunction Modal(props) {\r\n    const { largeImg, largeImgAlt, closeModal } = props;\r\n\r\n    return (\r\n      <div className={styles.Overlay} onClick={closeModal}>\r\n        <div className={styles.Modal}>\r\n          <img src={largeImg} alt={largeImgAlt} />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import \"./App.css\";\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\r\nimport Button from \"./components/Button/Button\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState(1);\r\n  const [images, setImages] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [largeImg, setLargeImg] = useState(\"\");\r\n  const [largeImgAlt, setLargeImgAlt] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [totalImages, setTotalImages] = useState(0);\r\n  const [imagesDisplayed, setImagesDisplayed] = useState(0);\r\n\r\n  const fetchImages = (searchValue, pageNum) => {\r\n    try {\r\n      fetch(\r\n        `https://pixabay.com/api/?&key=24785169-ce0e5464f046c25feb9965069&q=${searchValue}&page=${pageNum}&image_type=photo&orientation=horizontal&per_page=12`\r\n      )\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          setTotalImages(data.total);\r\n          page === 1\r\n            ? setImages(data.hits)\r\n            : setImages([...images, ...data.hits]);\r\n          page === 1\r\n            ? setImagesDisplayed(data.hits.length)\r\n            : setImagesDisplayed(imagesDisplayed + data.hits.length);\r\n        })\r\n        .finally(() => setIsLoaded(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages(searchInput, page);\r\n  }, [searchInput, page]);\r\n\r\n  const changeHandler = (e) => {\r\n    const value = e.target.value;\r\n    setSearchInput(value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setPage(1);\r\n    fetchImages(searchInput, page);\r\n  };\r\n\r\n  const loadMore = (e) => {\r\n    e.preventDefault();\r\n    setPage(page => page + 1);\r\n  };\r\n\r\n  const openModalWindow = (e) => {\r\n    if (e.target.nodeName !== \"IMG\") {\r\n      return;\r\n    }\r\n    setLargeImg(e.target.dataset.img);\r\n    setLargeImgAlt(e.target.alt);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModalWithEsc = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      setIsModalOpen(false);\r\n    }\r\n  };\r\n\r\n  const closeModal = (e) => {\r\n    if (e.target.nodeName === \"IMG\") {\r\n      return;\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  window.addEventListener(\"keydown\", closeModalWithEsc);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar changeHandler={changeHandler} submitHandler={submitHandler} />\r\n\r\n      {isLoaded === true ? (\r\n        <ImageGallery images={images} openModalWindow={openModalWindow} />\r\n      ) : (\r\n        <Oval color=\"blue\" secondaryColor=\"white\" height=\"100\" width=\"100\" />\r\n      )}\r\n\r\n      {imagesDisplayed === totalImages ? <></> : <Button loadMore={loadMore} />}\r\n\r\n      {isModalOpen === true ? (\r\n        <Modal\r\n          closeModal={closeModal}\r\n          largeImg={largeImg}\r\n          largeImgAlt={largeImgAlt}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nApp.propTypes = {\r\n  page: PropTypes.number,\r\n  images: PropTypes.array,\r\n  isLoaded: PropTypes.bool,\r\n  searchInput: PropTypes.string,\r\n  largeImg: PropTypes.string,\r\n  largeImgAlt: PropTypes.string,\r\n  isModalOpen: PropTypes.bool,\r\n  totalImages: PropTypes.number,\r\n  imagesDisplayed: PropTypes.number,\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3POzc\",\"Modal\":\"Modal_Modal__3846q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2mS2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__13Di4\"};"],"sourceRoot":""}